@import 'variables';

// @font-face {
//   font-family: "Roboto-Regular";
//   font-style: normal;
//   font-weight: 400;
//   font-display: swap;
//   src: local("Roboto Regular"), local("Roboto-Regular"),
//     url(../assets/fonts/Roboto-Regular.woff2) format("woff2");
//   unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,
//     U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
// }
// @font-face {
//   font-family: "Roboto-Bold";
//   font-style: normal;
//   font-weight: 700;
//   src: local("Roboto Bold"), local("Roboto-Bold"),
//     url(../assets/fonts/Roboto-Bold.woff2) format("woff2");
//   unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,
//     U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
// }

// @font-face {
//   font-family: "Roboto-Medium";
//   font-style: normal;
//   font-weight: 400;
//   unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,
//     U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
//   src: local("Roboto Medium"), local("Roboto-Medium"),
//     url(../assets/fonts/Roboto-Medium.woff2) format("woff2");
// }

* {
  box-sizing: border-box;

  &::selection {
    background: #c7b6ff;
  }
}

.access {
  @include access;
}

img {
  max-width: 100%;
}

button,
.button {
  display: inline-block;
  text-decoration: none;
  font: $fontMed;
  font-size: 14px;
  text-align: center;
  padding: 5px 20px;
  border-radius: 6px;
  color: $cWhite;
  background: $cBloodOrange;

  &:hover,
  &:focus {
    background: $cOrange 0%;
    box-shadow: $shadowShort;
  }
}

.hidden {
  display: none !important;
}

@media (max-width: map-get($mediaSizes, 's') - 1) {
  .hide-xs {
    display: none !important;
  }
}

@include media(s) {
  .hide-gt-xs {
    display: none !important;
  }
}

@media (min-width: map-get($mediaSizes, 's')) and (max-width: map-get($mediaSizes, 'm') - 1) {
  .hide-s {
    display: none !important;
  }
}

@include media(m) {
  .hide-gt-s {
    display: none !important;
  }
}

@media (min-width: map-get($mediaSizes, 'm')) and (max-width: map-get($mediaSizes, 'l') - 1) {
  .hide-m {
    display: none !important;
  }
}

@include media(l) {
  .hide-gt-m {
    display: none !important;
  }
}

@media (min-width: map-get($mediaSizes, 'l')) and (max-width: map-get($mediaSizes, 'xl') - 1) {
  .hide-l {
    display: none !important;
  }
}

@include media(xl) {
  .hide-xl,
  .hide-gt-l {
    display: none !important;
  }
}
